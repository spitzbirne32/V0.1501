# This file contains common pin mappings for the BIGTREETECH SKR3EZ
# To use this config, the firmware should be compiled for the
#[*] Enable extra low-level configuration options
#Micro-controller Architecture = STMicroelectronics STM32
#Processor model = STM32H723
#Bootloader offset = (128KiB bootloader (SKR SE BX v2.0))
#Clock Reference = 25 MHz crystal
#Communication interface = USB (on PA11/PA12)

[exclude_object]
[include mainsail.cfg]
#[include macros.cfg]
[include K-ShakeTune/*.cfg]
[include config_backup.cfg]

[include BTT-SFSV2.cfg]

#[include AFC/*.cfg]

[include tmc_autotune.cfg]

[include klipper_expander.cfg]

[include Macros/macros.cfg]
[include Macros/better-print-start.cfg]
[include Macros/klipper_auto_speed.cfg]

#Input Shaper Stuff
[include ADXL/adxl_nozzle_btt.cfg]
#[include ADXL/adxl_kusba.cfg]

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

[filter_monitor air_filter]
fan: fan_generic bed_fans
path: ~/printer_data/config/filter_monitor

[include config_backup.cfg]
[respond]

# Pins: https://github.com/bigtreetech/SKR-3/blob/master/Hardware%20(SKR%203%20EZ)/BIGTREETECH%20SKR%203%20EZ%20V1.0-PIN.pdf

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_1C0023000651313332323730-if00
restart_method: command

[temperature_sensor SKR3_EZ]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[mcu rpi]
serial: /tmp/klipper_host_mcu

#[temperature_sensor chamber]
#sensor_type: BME280
#i2c_address: 118
#i2c_mcu: rpi
#i2c_bus: i2c.1


[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 250
max_accel: 2000
max_z_velocity: 15
max_z_accel: 300
square_corner_velocity: 6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PD4
dir_pin: PD3                                                        
enable_pin: !PD6
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2240_stepper_x:virtual_endstop  
position_endstop: 120
position_max: 120
homing_speed: 60                                                    # for sensorless homing it is recommended not to go above 40mm/s 
homing_retract_dist: 20


[tmc2240 stepper_x]
cs_pin: PD5
spi_software_miso_pin: PE15
spi_software_mosi_pin: PE13
spi_software_sclk_pin: PE14
interpolate: True
run_current: 1.0
home_current: 0.7
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag0_pin: ^!PC1
rref: 12000

[stepper_y]
step_pin: PA15
dir_pin: PA8                                                        # Check motor direction in link above. If inverted, add a ! before gpio5
enable_pin: !PD1
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2240_stepper_y:virtual_endstop  
position_endstop: 120
position_max: 120
homing_speed: 60
homing_retract_dist: 20

[tmc2240 stepper_y]
cs_pin: PD0
spi_software_miso_pin: PE15
spi_software_mosi_pin: PE13
spi_software_sclk_pin: PE14
interpolate: True
run_current: 1.0 
home_current: 0.7
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag0_pin: ^!PC3
rref: 12000

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PE2
dir_pin: PE3                                                       # Remove the ! before PE3 if motor direction is inverted.
enable_pin: !PE0
rotation_distance: 40
gear_ratio: 9:1
microsteps: 32
endstop_pin: ^PC0
position_endstop: 120
position_max: 120
position_min: -3
homing_speed: 40
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2240 stepper_z]
cs_pin: PE1
spi_software_miso_pin: PE15
spi_software_mosi_pin: PE13
spi_software_sclk_pin: PE14
interpolate: True
run_current: 0.85
stealthchop_threshold: 0                                     # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
rref: 12000

#####################################################################
#   Extruder
#####################################################################


# https://dangerklipper.io/MPC.html#calibration
[extruder]
step_pin: PD15
dir_pin: PD14                                                     # Add ! if moving opposite direction
enable_pin: !PC7
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
rotation_distance: 47.003                                          # See calibrating rotation_distance on extruders doc
gear_ratio: 9:1                                                   # For Mini Afterburner
microsteps:16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_power: 70
cooling_fan: fan
filament_density: 1.06
filament_heat_capacity: 1.8 
heater_pin: PB3
sensor_type: PT1000
sensor_pin: PA2
control: mpc
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 310
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 0.8
pressure_advance: 0.0
pressure_advance_smooth_time: 0.040

[tmc2240 extruder]
cs_pin: PC6
spi_software_miso_pin: PE15
spi_software_mosi_pin: PE13
spi_software_sclk_pin: PE14
interpolate: True
run_current: 0.5
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder
rref: 12000

#[temperature_sensor Heatsink]  #Dragon Burner thermistor
#sensor_type: Generic 3950
#sensor_pin: PA3
#max_temp: 85

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PD7
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PA1
smooth_time: 3.0
min_temp: 0
max_temp: 120
control: pid                                                        # Do PID calibration after initial checks
pid_kp: 68.453
pid_ki: 2.749
pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################

[heater_fan hotend_fan]
# FAN0
pin: PB7      #left fan port
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
tachometer_pin: ^PE5
#   Tachometer input pin for monitoring fan speed. A pullup is generally
#   required. This parameter is optional.
tachometer_ppr: 2
#   When tachometer_pin is specified, this is the number of pulses per
#   revolution of the tachometer signal. For a BLDC fan this is
#   normally half the number of poles. The default is 2.
tachometer_poll_interval: 0.0009
#   When tachometer_pin is specified, this is the polling period of the
#   tachometer pin, in seconds. The default is 0.0015, which is fast
#   enough for fans below 10000 RPM at 2 PPR. This must be smaller than
#   30/(tachometer_ppr*rpm), with some margin, where rpm is the
#   maximum speed (in RPM) of the fan.

[fan]
# FAN1
pin: PB6    #middle fan port
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
cycle_time: 0.010

[fan_generic turbiter]
# FAN2
pin: PB5
#max_power: 1.0
#kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
#off_below: 0.13
#cycle_time: 0.010




#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600


## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5, EXP1_2=PB0,
    EXP1_3=PB1, EXP1_4=PE8,
    EXP1_5=PE9, EXP1_6=PE10,    # Slot in the socket on this side
    EXP1_7=PE11, EXP1_8=PE12,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PE7, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC4, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>


[neopixel yavoth]
pin: PE6
chain_count: 1
color_order: GRBW
initial_RED: 1
initial_GREEN: 0
initial_BLUE: 0

#####################################################################
# Macros
#####################################################################




[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30

